// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.app2.app2t.domain.pjm;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.persistence.EntityManager;
import java.util.List;

privileged aspect Task_Custom_Jpa_ActiveRecord {

    protected static Logger LOGGER = LoggerFactory.getLogger(Task_Custom_Jpa_ActiveRecord.class);
	
	public static List<Task> Task.findTaskByModuleAndTypeTask(String moduleCode, List<String> listTypeTaskCode, boolean getMyTask, boolean getOtherTask) {
        EntityManager ent = Task.entityManager();



        Criteria criteria = ((Session) ent.getDelegate()).createCriteria(Task.class);
        criteria.createAlias("typeTask", "t")
                .createAlias("moduleProject", "m");

        if (!moduleCode.equals("AllModule")) {
            criteria.add(Restrictions.eq("m.moduleCode", moduleCode));
        }
        if (listTypeTaskCode.size() > 0) {
            criteria.add(Restrictions.in("t.typeTaskCode", listTypeTaskCode));
        }

        criteria.addOrder(Order.desc("empCode"))
                .addOrder(Order.asc("t.typeTaskName"))
                .addOrder(Order.asc("dateStart"))
                .addOrder(Order.asc("dateEnd"));

        List<Task> tasks = criteria.list();
        return tasks;
    }

    public static List<Task> Task.findProjectByTask(long typeCode) {
        EntityManager ent = Task.entityManager();
        Criteria criteria = ((Session) ent.getDelegate()).createCriteria(Task.class,"Test");
        criteria.createAlias("Test.typeTask","typeTask");
        try {

            criteria.add(Restrictions.eq("typeTask.id", typeCode));
            List<Task> emEmployees = criteria.list();
            Task emEmployee = emEmployees.get(0);
            System.out.print( emEmployee.getId());
        } catch (IndexOutOfBoundsException e)
        {
            System.out.print( e );
            return criteria.list();
        }
        return criteria.list();
    }
}


