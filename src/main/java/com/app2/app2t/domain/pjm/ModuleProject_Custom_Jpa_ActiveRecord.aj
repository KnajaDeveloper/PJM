// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.app2.app2t.domain.pjm;

import com.app2.app2t.domain.pjm.ModuleProject;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.persistence.EntityManager;
import java.util.List;
import java.util.Date;

privileged aspect ModuleProject_Custom_Jpa_ActiveRecord {
    protected static Logger LOGGER = LoggerFactory.getLogger(ModuleProject_Custom_Jpa_ActiveRecord.class);
    
    public static ModuleProject ModuleProject.saveModuleProject(String moduleCode, String moduleName, Integer moduleCost
            , Date dateStart, Date dateEnd, Project project) {
        EntityManager ent = ModuleProject.entityManager();
        Criteria criteria = ((Session) ent.getDelegate()).createCriteria(ModuleProject.class);
        ModuleProject moduleproject = new ModuleProject();
        moduleproject.setModuleCode(moduleCode);
        moduleproject.setModuleName(moduleName);
        moduleproject.setModuleCost(moduleCost);
        moduleproject.setDateStart(dateStart);
        moduleproject.setDateEnd(dateEnd);
        moduleproject.setProject(project);
        moduleproject.persist();
        return moduleproject;
    }

    public static List<ModuleProject> ModuleProject.findModuleByModuleCode(String moduleCode) {
        EntityManager ent = Project.entityManager();
        Criteria criteria = ((Session) ent.getDelegate()).createCriteria(ModuleProject.class);
        criteria.add(Restrictions.eq("moduleCode", moduleCode));
        return criteria.list();
    }

    public static List<ModuleProject> ModuleProject.findAllNameModuleByProjectCode(Project project) {
        EntityManager ent = Project.entityManager();
        Criteria criteria = ((Session) ent.getDelegate()).createCriteria(ModuleProject.class);
        criteria.add(Restrictions.eq("project", project));
        return criteria.list();
    }
}
