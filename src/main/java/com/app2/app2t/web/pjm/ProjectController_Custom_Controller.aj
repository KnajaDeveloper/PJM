// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.app2.app2t.web.pjm;

import com.app2.app2t.util.AuthorizeUtil;
import flexjson.JSONSerializer;
import org.springframework.expression.spel.ast.LongLiteral;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import com.app2.app2t.domain.pjm.*;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;
privileged aspect ProjectController_Custom_Controller {

    @RequestMapping(value = "/searchproject", produces = "text/html")
    public String ProjectController.typetask(Model uiModel) {

        return "projects/searchproject";
    }

    @RequestMapping(value = "/createproject", produces = "text/html")
    public String ProjectController.createproject(Model uiModel) {

        return "projects/createproject";
    }
    //      @RequestMapping(value = "/progressproject", produces = "text/html")
    //  public String ProjectController.progressproject(Model uiModel)
    // // ,
    //    //  @RequestParam(value = "projectCode", required = false) String projectCode
    //  //)
    //  {
    //      //uiModel.addAttribute("projectCode", projectCode);
    //      return "projects/progressproject";
    //  }

    @RequestMapping(value = "/progressproject", produces = "text/html")
    public String ProjectController.progressproject(Model uiModel,
                                                    @RequestParam(value = "id", required = false) Long projectID
    ) {
        uiModel.addAttribute("projectID", projectID);
        return "projects/progressproject";
    }

    @RequestMapping(value = "/editproject", produces = "text/html")
    public String ProjectController.editproject(Model uiModel,
                                                @RequestParam(value = "projectId", required = false) String projectId) {
        String userName = AuthorizeUtil.getUserName();
        Map employee = emRestService.getEmployeeByUserName(userName);
        Boolean projectManager = ProjectManager.checkRoleProjects(Long.parseLong(projectId), employee.get("empCode").toString());
        List<Project> project = Project.findProjectByIdProject(Long.parseLong(projectId));
        List<ModuleProject> listModuleProject = ModuleProject.findAllNameModuleByProjectCode(project.get(0));

        if (!projectManager) {
            for (ModuleProject mp : listModuleProject) {
                Boolean moduleManager = ModuleManager.checkRoleModule(mp.getId(), employee.get("empCode").toString());
                if (moduleManager) {
                    uiModel.addAttribute("projectId", projectId);
                    uiModel.addAttribute("role", "ModuleManager");
                    return "projects/editproject";
                }
            }
            return "redirect:/";
        } else {
            uiModel.addAttribute("projectId", projectId);
            uiModel.addAttribute("role", "ProjectManager");
            return "projects/editproject";
        }

    }
}